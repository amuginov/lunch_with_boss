from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.common import WEEKDAY_SHORTCUTS, MONTH_SHORTCUTS

def employee_keyboard() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–æ–ª–∏ employee
    """
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±–µ–¥")],
            [KeyboardButton(text="üìã –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")],
            [KeyboardButton(text="–ü–æ–º–æ—â—å")],  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å"
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

def generate_booking_keyboard(bookings):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.
    :param bookings: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö.
    :return: InlineKeyboardMarkup.
    """
    inline_keyboard = []
    for booking in bookings:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        weekday = WEEKDAY_SHORTCUTS[booking["date"].strftime("%A")]
        month = MONTH_SHORTCUTS[booking["date"].strftime("%m")]
        formatted_date = f"{weekday}, {booking['date'].day} {month}"
        formatted_time = booking["start_time"].strftime("%H:%M")
        button_text = f"{formatted_date}, {formatted_time}, {booking['manager_name']}"

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        detail_button = InlineKeyboardButton(
            text=button_text,
            callback_data=f"detail_booking:{booking['id']}"
        )
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        delete_button = InlineKeyboardButton(
            text="‚ùå",
            callback_data=f"delete_booking:{booking['id']}"
        )
        inline_keyboard.append([detail_button, delete_button])

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

def generate_slots_keyboard(slots):
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–ª–æ—Ç–æ–≤ –≤ 2 —Ä—è–¥–∞.
    :param slots: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ LunchSlot.
    :return: InlineKeyboardMarkup.
    """
    inline_keyboard = []
    row = []
    for slot in slots:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
        weekday = WEEKDAY_SHORTCUTS[slot.date.strftime("%A").lower()]
        month = MONTH_SHORTCUTS[slot.date.strftime("%m")]
        formatted_date = f"{weekday}, {slot.date.day} {month}"
        formatted_time = slot.start_time.strftime("%H:%M")
        button_text = f"{formatted_date}, {formatted_time}"

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å—Ç—Ä–æ–∫—É
        row.append(InlineKeyboardButton(text=button_text, callback_data=f"select_slot:{slot.id}"))

        # –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ 2 –∫–Ω–æ–ø–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        if len(row) == 2:
            inline_keyboard.append(row)
            row = []

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if row:
        inline_keyboard.append(row)

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

